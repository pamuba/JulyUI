Class Component(es6 classes)
1. Maintain their own private data - state

Person(name, age)
person(name="" , age="")

2. Lifecycle hooks

Function Components(simple functions)
1. No state(can implement state using hooks)
2. No this
3. Use fn components as much as possible

16.4 alpha - hooks

JSX = Javascript XML(extension to JS language syntex)
1. Write XML-like code for elements and components
2. JSX - tag names, attributes, children
3. JSX is not necessary to write REACT appliations
4. Code becomes simple and elegent
5. JSX ultimately transpiles to pure JS which is undesttod by the browsers

PROPS:
1. Every componet receives one props object
2. Props are Immutable


STATE:
1. Class has state , now function componet can have state(useState hook)
2. state can be changed

**why we need to bind the this keyword inside a function
**Because the function is called by the component


class test{

  draw = () => {
      //pen
      this.pen = red;
  }

}

Method as props : 

Conditional Rendering 
1. if/else
2. Element Variables
3. Ternary conditional operator
4. Short circuit operator


List + Keys

Styling React Components
1. CSS Stylesheets
2. Inline Styling
3. CSS Modules
4. CSS in JS Libraries
5. Pure Component

Shallow Comparison:
Primitive Types:
a (SC) b rtun true if a and b have the same value + of same Types

Complex Types:
a (SC) b retuns true if a and b reference the same exact object


Pure Comp vs Reg Comp
RC - shouldComponentUpdate always retuns TRUE

PC - shouldComponentUpdate for performing SC , true/false

